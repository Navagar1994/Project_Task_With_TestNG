<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="39188" started-at="2023-03-04T20:38:05Z" finished-at="2023-03-04T20:38:45Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="39188" started-at="2023-03-04T20:38:05Z" finished-at="2023-03-04T20:38:45Z">
      <class name="org.test.FlipkartTask">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeClass" is-config="true" duration-ms="2422" started-at="2023-03-04T20:38:05Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="12" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="test1" duration-ms="7" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="test2" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testB()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="testB" duration-ms="36701" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:45Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(text(),'Y16')])[1]"}
  (Session info: chrome=110.0.5481.178)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FUGQNF4', ip: '192.168.0.146', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_351'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.178, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50278}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: fd62789de762dbd8425e0956d7d82464
*** Element info: {Using=xpath, value=(//div[contains(text(),'Y16')])[1]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[contains(text(),'Y16')])[1]"}
  (Session info: chrome=110.0.5481.178)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FUGQNF4', ip: '192.168.0.146', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_351'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 110.0.5481.178, chrome: {chromedriverVersion: 110.0.5481.77 (65ed616c6e8e..., userDataDir: C:\Program Files (x86)\scop...}, goog:chromeOptions: {debuggerAddress: localhost:50278}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: fd62789de762dbd8425e0956d7d82464
*** Element info: {Using=xpath, value=(//div[contains(text(),'Y16')])[1]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.test.FlipkartTask.testB(FlipkartTask.java:99)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB -->
        <test-method status="PASS" signature="testA()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="testA" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:08Z" finished-at="2023-03-04T20:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="16" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testa()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="testa" duration-ms="9" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testa -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testb()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="testb" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testb -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:org.test.FlipkartTask@7d9d1a19]" name="afterClass" is-config="true" duration-ms="0" started-at="2023-03-04T20:38:45Z" finished-at="2023-03-04T20:38:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- org.test.FlipkartTask -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
